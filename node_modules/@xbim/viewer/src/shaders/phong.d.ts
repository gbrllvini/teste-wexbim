export declare const phong = "\nprecision mediump float;\n\nvarying vec3 normalInterp; \nvarying vec3 vertPos; \n\nuniform int mode; \nuniform float Ka; \nuniform float Kd; \nuniform float Ks; \nuniform float shininessVal; \n\n\nuniform vec3 ambientColor;\nuniform vec3 diffuseColor;\nuniform vec3 specularColor;\n\nuniform vec3 lightPos; \n\nvoid main() {\n vec3 N = normalize(normalInterp);\n vec3 L = normalize(lightPos - vertPos);\n\n \n float lambertian = max(dot(N, L), 0.0);\n\n float specular = 0.0;\n\n if(lambertian > 0.0) {\n vec3 R = reflect(-L, N); \n vec3 V = normalize(-vertPos); \n\n \n float specAngle = max(dot(R, V), 0.0);\n specular = pow(specAngle, shininessVal);\n }\n gl_FragColor = vec4(Ka * ambientColor +\n Kd * lambertian * diffuseColor +\n Ks * specular * specularColor, 1.0);\n\n \n if(mode == 2) gl_FragColor = vec4(Ka * ambientColor, 1.0);\n \n if(mode == 3) gl_FragColor = vec4(Kd * lambertian * diffuseColor, 1.0);\n \n if(mode == 4) gl_FragColor = vec4(Ks * specular * specularColor, 1.0);\n}\n";
