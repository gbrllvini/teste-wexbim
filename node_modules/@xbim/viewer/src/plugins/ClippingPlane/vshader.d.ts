export declare const vshader = "attribute highp vec3 aVertex;\nattribute highp vec4 aColour;\nattribute highp float aId;\n\n\nuniform mat4 uMvMatrix;\nuniform mat4 uPMatrix;\n\n\nuniform mediump float uColorCoding; \nuniform mediump float uSelectedId;\n\n\nuniform vec4 uHoverPickColour;\n\n\nvarying vec4 vColor;\n\nvec4 getIdColor(float id){\n float product = floor(id + 0.5);\n float B = floor(product / (256.0*256.0));\n float G = floor((product - B * 256.0*256.0) / 256.0);\n float R = mod(product, 256.0);\n return vec4(R / 255.0, G / 255.0, B / 255.0, 1.0);\n}\n\nvec4 getTransparentColor(vec4 color, float transparency){\n mat4 aMat4 = mat4(1.0, 0.0, 0.0, 0.0,\n 0.0, 1.0, 0.0, 0.0,\n 0.0, 0.0, 1.0, 0.0,\n 0.0, 0.0, 0.0, transparency);\n return aMat4 * color;\n}\n\n\nvoid main(void) {\n\n bool ignoreVec = false;\n if (uColorCoding > 0.5 && uColorCoding <= 1.0)\n {\n ignoreVec = aId == 4.0;\n vColor = getIdColor(aId);\n }\n else if (uColorCoding < -0.5)\n {\n ignoreVec = aId == 4.0;\n vColor = getIdColor(1000010.0);\n }\n else\n { \n if(uSelectedId == aId)\n { \n vColor = aColour; \n }\n else\n {\n if(uSelectedId > 0.0) \n {\n if(aId != 4.0){ \n ignoreVec = true;\n }\n else if(uSelectedId != 4.0) \n vColor = getTransparentColor(aColour, 1.5);\n }\n else \n vColor = aColour;\n }\n }\n\n if(!ignoreVec)\n {\n gl_Position = uPMatrix * uMvMatrix * vec4(aVertex, 1.0);\n }\n\n}";
